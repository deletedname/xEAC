<?xml version="1.0" encoding="utf-8"?>
<!--
    Copyright (C) 2012 Ethan Gruber
    xEAC: https://github.com/ewg118/xEAC
    Apache License 2.0
-->
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:xforms="http://www.w3.org/2002/xforms" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:ev="http://www.w3.org/2001/xml-events"
	xmlns:xxforms="http://orbeon.org/oxf/xml/xforms" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:fr="http://orbeon.org/oxf/xml/form-runner"
	xmlns:xeac="https://github.com/ewg118/xEAC" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:eac="urn:isbn:1-931666-33-4" xmlns:oxf="http://www.orbeon.com/oxf/processors"
	xmlns:exist="http://exist.sourceforge.net/NS/exist" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" >
	<head>
		<title>xEAC Administration</title>
		<link rel="stylesheet" href="/fr/style/bootstrap/css/bootstrap.css" type="text/css"/>
		<link rel="stylesheet" href="/fr/style/form-runner-bootstrap-override.css" type="text/css"/>
		<link rel="stylesheet" href="/config/theme/examples.css" type="text/css" media="all"/>
		<link rel="shortcut icon" href="/ops/images/orbeon-icon-16.ico"/>
		<link rel="icon" href="/ops/images/orbeon-icon-16.png" type="image/png"/>
		<link rel="stylesheet" type="text/css" href="http://yui.yahooapis.com/3.8.0/build/cssgrids/grids-min.css"/>
		<link rel="stylesheet" type="text/css" href="/apps/xeac/xforms/css/xforms.css"/>

		<xforms:model>
			<!-- exist URL is stored in an XML file -->
			<xforms:instance id="exist-config">
				<xi:include href="../exist-config.xml"/>
			</xforms:instance>

			<xforms:instance id="control-instance">
				<controls xmlns="">
					<id/>
					<identifiers/>
					<publicationStatus/>
					<collection-name/>
					<status/>
					<error/>
					<numFound/>
					<page>1</page>
					<query_input/>
					<query_sent/>
					<solr-core/>
					<firstrun>false</firstrun>
				</controls>
			</xforms:instance>

			<xforms:instance id="config" xxforms:exclude-result-prefixes="#all">
				<config/>
			</xforms:instance>

			<xforms:instance id="config-template" xxforms:exclude-result-prefixes="#all">
				<config version="0.2">
					<flickr_api_key/>
					<geonames_api_key/>
					<title>xEAC</title>
					<solr_published>http://localhost:8080/solr/xeac-published/</solr_published>
					<url>http://localhost:8080/orbeon/xeac/</url>
					<sparql>
						<update/>
						<store/>
						<query/>
					</sparql>
					<oai-pmh active="false"/>
					<lang>en</lang>
					<google_analytics/>
					<index>
						<div>
							<h1>xEAC</h1>
							<p>xEAC is an open source XForms framework for creating, managing, and publishing EAC-CPF collections.</p>
						</div>
					</index>
					<footer>
						<div id="footer">
							<a href="https://github.com/ewg118/xEAC">xEAC</a> Â©2014 Ethan Gruber. <a href="http://www.apache.org/licenses/LICENSE-2.0.html">License.</a>
						</div>
					</footer>
					<instances>
						<agencyName-list>
							<item default="true">Default Agency</item>
						</agencyName-list>
					</instances>
					<theme>
						<facets>
							<facet>entityType</facet>
							<facet>occupation</facet>
							<facet>placeEntry</facet>
							<facet>function</facet>
							<facet>mandate</facet>
							<facet>generalContext</facet>
							<facet>legalStatus</facet>
							<facet>localDescription</facet>
						</facets>
						<jquery_ui_theme>smoothness</jquery_ui_theme>
					</theme>
					<relationSemantics>
						<cpfRelations>
							<relation from="correspondedWith" to="correspondedWith"/>
						</cpfRelations>
						<resourceRelations>
							<relation>creatorOf</relation>
						</resourceRelations>
					</relationSemantics>
					<localTypeDeclarations/>
				</config>
			</xforms:instance>

			<xforms:instance id="list">
				<list xmlns=""/>
			</xforms:instance>

			<xforms:instance id="item-template">
				<item xmlns="">
					<name/>
					<id/>
					<published/>
				</item>
			</xforms:instance>

			<xforms:instance id="doc" xxforms:exclude-result-prefixes="#all">
				<eac-cpf xmlns=""/>
			</xforms:instance>

			<xforms:instance id="kml" xxforms:exclude-result-prefixes="#all">> <kml/>
			</xforms:instance>

			<!-- xquery -->
			<xforms:instance id="eXist-xquery">
				<exist:query xmlns="">
					<exist:text/>
				</exist:query>
			</xforms:instance>

			<xforms:instance id="xqueries">
				<queries xmlns="">
					<query id="collection-count">&lt;report&gt;{count(collection())}&lt;/report&gt;</query>
					<query id="get-objects"> declare namespace eac="urn:isbn:1-931666-33-4"; &lt;report> { for $record in subsequence(collection(), START, 20) return &lt;record>
						&lt;maintenanceStatus&gt; {$record/eac:eac-cpf/eac:control/eac:maintenanceStatus/text()}&lt;/maintenanceStatus&gt; &lt;id>{$record//eac:recordId/text()
						}&lt;/id> &lt;title>{ if (string($record//*:nameEntry[@xml:lang='en'][string(*:preferredForm)][1]/*:part/text())) then
						$record//*:nameEntry[@xml:lang='en'][string(*:preferredForm)][1]/*:part/text() else $record//*:nameEntry[1]/*:part[1]/text() }&lt;/title> &lt;published/&gt;
						&lt;/record> } &lt;/report> </query>
					<query id="create-collection">xmldb:create-collection('/db/xeac', 'records')</query>
					<query id="publish-all">&lt;report> { for $foo in collection()[descendant::*:publicationStatus='approved'] return &lt;id> { $foo//*:recordId/text() } &lt;/id> }
						&lt;/report></query>
					<query id="query-objects"> &lt;report> { for $record in collection() return if ($record//*:recordId[contains(., 'QUERY')] or
						$record//*:nameEntry/*:part[matches(., 'QUERY', 'i')]) then &lt;record> &lt;id>{ $record//*:recordId/text() }&lt;/id> &lt;title>{ if
						(string($record//*:nameEntry[@xml:lang='en'][string(*:preferredForm)][1]/*:part/text())) then
						$record//*:nameEntry[@xml:lang='en'][string(*:preferredForm)][1]/*:part/text() else $record//*:nameEntry[1]/*:part[1]/text() }&lt;/title>
						&lt;maintenanceStatus&gt; {$record/eac:eac-cpf/eac:control/eac:maintenanceStatus/text()}&lt;/maintenanceStatus&gt;&lt;published/&gt; &lt;/record> else '' }
						&lt;/report> </query>
				</queries>
			</xforms:instance>

			<xforms:instance id="pagination-result">
				<exist:result/>
			</xforms:instance>

			<xforms:instance id="xquery-result">
				<exist:result/>
			</xforms:instance>

			<!-- solr response for id query -->
			<xforms:instance id="published-response">
				<response xmlns=""/>
			</xforms:instance>
			<xforms:instance id="list-published-response">
				<response xmlns=""/>
			</xforms:instance>

			<!-- send to Solr -->
			<xforms:instance id="addIndex" xxforms:exclude-result-prefixes="#all">
				<add xmlns=""/>
			</xforms:instance>
			<xforms:instance id="addDoc" xxforms:exclude-result-prefixes="#all">
				<add xmlns=""/>
			</xforms:instance>
			<!-- Instance for Solr commit-->
			<xforms:instance id="sendCommit" xxforms:exclude-result-prefixes="#all">
				<commit/>
			</xforms:instance>
			<!-- delete from Solr -->
			<xforms:instance id="deleteId" xxforms:exclude-result-prefixes="#all">
				<delete xmlns="">
					<query/>
				</delete>
			</xforms:instance>
			<xforms:instance id="deleteAll" xxforms:exclude-result-prefixes="#all">
				<delete xmlns="">
					<query>id:*</query>
				</delete>
			</xforms:instance>

			<xforms:instance id="optimizeIndex" xxforms:exclude-result-prefixes="#all">
				<optimize/>
			</xforms:instance>
			
			<!-- SPARQL CRUD -->
			<xforms:instance id="rdf" xxforms:exclude-result-prefixes="#all">
				<rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"/>
			</xforms:instance>
			
			<xforms:instance id="sparqlUpdate-template">
				<query>
					<![CDATA[DELETE {?s ?p ?o} WHERE { <URI> ?p ?o . ?s ?p ?o . FILTER (?s = <URI>) }]]>
				</query>
			</xforms:instance>
			
			<xforms:instance id="sparqlUpdate">
				<query/>
			</xforms:instance>

			<xforms:bind nodeset="instance('control-instance')">
				<xforms:bind nodeset="firstrun" type="xs:boolean"/>
			</xforms:bind>

			<!--<xforms:bind nodeset="instance('config-template')">
				<xforms:bind nodeset="title" required="true()"/>
				<xforms:bind nodeset="url" required="true()" type="xs:anyURI"/>
				<xforms:bind nodeset="solr_published" required="true()" type="xs:anyURI"/>
				<xforms:bind nodeset="solr_all" required="true()" type="xs:anyURI"/>				
			</xforms:bind>-->

			<!-- submissions -->
			<xforms:submission id="load-config" serialization="none" method="get" action="{instance('exist-config')/url}xeac/config.xml" replace="instance" instance="config"
				xxforms:username="{instance('exist-config')/username}" xxforms:password="{instance('exist-config')/password}">
				<xforms:action ev:event="xforms-submit-done">
					<!-- get the number of docs in the eXist collection() -->
					<xforms:setvalue ref="instance('eXist-xquery')/exist:text" value="instance('xqueries')/query[@id='collection-count']"/>
					<xforms:send submission="xquery-collection"/>
					<xforms:setvalue ref="instance('control-instance')/numFound" value="number(instance('xquery-result'))"/>
					<!-- set value in control instance -->

					<xforms:var name="end" select="if(instance('control-instance')/numFound &gt; 20) then 20 else instance('control-instance')/numFound"/>
					<!-- get list of files for page 1, replacing START and END -->

					<xforms:setvalue ref="instance('eXist-xquery')/exist:text" value="replace(instance('xqueries')/query[@id='get-objects'], 'START', '1')"/>
					<xforms:send submission="xquery-pagination"/>
				</xforms:action>
				<xforms:action ev:event="xforms-submit-error">
					<xforms:setvalue ref="instance('control-instance')/firstrun" value="true()"/>
				</xforms:action>
			</xforms:submission>

			<xforms:submission id="save-config" ref="instance('config-template')" action="{instance('exist-config')/url}xeac/config.xml" method="put" replace="none"
				xxforms:username="{instance('exist-config')/username}" xxforms:password="{instance('exist-config')/password}">
				<xforms:message ev:event="xforms-submit-error" level="modal">Error Saving Config.</xforms:message>
			</xforms:submission>

			<xforms:submission id="create-records-collection" ref="instance('eXist-xquery')" method="post" action="{instance('exist-config')/url}" replace="none"
				xxforms:username="{instance('exist-config')/username}" xxforms:password="{instance('exist-config')/password}">
				<xforms:action ev:event="xforms-submit-done">
					<xforms:send submission="load-config"/>
				</xforms:action>
			</xforms:submission>

			<!--***************** XQUERY ******************-->
			<!-- xquery for getting and processing query results into pages of items -->
			<xforms:submission id="xquery-pagination" ref="instance('eXist-xquery')" action="{instance('exist-config')/url}xeac/records" method="post" replace="instance"
				instance="pagination-result" xxforms:username="{instance('exist-config')/username}" xxforms:password="{instance('exist-config')/password}">
				<xforms:setvalue ref="instance('control-instance')/error" ev:event="xforms-submit-error">Error querying eXist database.</xforms:setvalue>
				<xforms:action ev:event="xforms-submit-done">
					<!--iterate through docs, check for publication -->
					<xforms:action xxforms:iterate="instance('pagination-result')//record">
						<xforms:setvalue ref="instance('control-instance')/solr-core" value="instance('config')/solr_published"/>
						<xforms:setvalue ref="instance('control-instance')/id" value="context()/id"/>
						<xforms:send submission="query-solr-for-publication"/>
					</xforms:action>
				</xforms:action>
			</xforms:submission>

			<xforms:submission id="xquery-collection" ref="instance('eXist-xquery')" action="{instance('exist-config')/url}xeac/records" method="post" replace="instance"
				instance="xquery-result" xxforms:username="{instance('exist-config')/username}" xxforms:password="{instance('exist-config')/password}">
				<xforms:setvalue ref="instance('control-instance')/error" ev:event="xforms-submit-error">Error querying eXist database.</xforms:setvalue>
			</xforms:submission>

			<!--<xforms:submission id="temp-query" ref="instance('temp-xquery')" action="{instance('exist-config')/url}xeac/records/" method="post" replace="instance" instance="temp-result"
				xxforms:username="{instance('exist-config')/username}" xxforms:password="{instance('exist-config')/password}">
				<xforms:setvalue ref="instance('control-instance')/error" ev:event="xforms-submit-error">Error querying eXist database.</xforms:setvalue>
			</xforms:submission>-->

			<!-- submission to query solr to see if the document is published -->
			<xforms:submission id="query-solr-for-publication" serialization="none" method="get"
				action="{instance('control-instance')/solr-core}select/?q=id:{instance('control-instance')/id}" replace="instance" instance="published-response">
				<!-- if the document is found in solr, get the updated solr doc -->
				<xforms:setvalue ev:event="xforms-submit-done" if="instance('published-response')/result[@name='response']/@numFound = '1'"
					ref="instance('pagination-result')//record[id=instance('control-instance')/id]/published" value="'true'"/>
			</xforms:submission>


			<!-- ************** Temporary Document Submissions ************** -->
			<xforms:submission id="load-doc" serialization="none" method="get" action="{instance('exist-config')/url}xeac/records/{instance('control-instance')/id}.xml"
				replace="instance" instance="doc" xxforms:username="{instance('exist-config')/username}" xxforms:password="{instance('exist-config')/password}">
				<xforms:message ev:event="xforms-submit-error" level="modal">Error loading file.</xforms:message>
				<xforms:action ev:event="xforms-submit-done">
					<xforms:setvalue ref="instance('doc')/eac:control/eac:publicationStatus" value="instance('control-instance')/publicationStatus"/>
					<xforms:send submission="save-doc"/>
				</xforms:action>
			</xforms:submission>

			<xforms:submission id="save-doc" ref="instance('doc')" xxforms:username="{instance('exist-config')/username}" xxforms:password="{instance('exist-config')/password}"
				action="{instance('exist-config')/url}xeac/records/{instance('control-instance')/id}.xml" method="put" replace="none"/>

			<!-- delete finding aid -->
			<xforms:submission id="delete-doc" action="{instance('exist-config')/url}xeac/records/{instance('control-instance')/id}.xml" method="delete" replace="none"
				xxforms:username="{instance('exist-config')/username}" xxforms:password="{instance('exist-config')/password}">
				<xforms:setvalue ev:event="xforms-submit-done" ref="instance('control-instance')/status">Finding aid successfully deleted.</xforms:setvalue>
			</xforms:submission>

			<!-- save KML -->
			<xforms:submission id="save-kml" ref="instance('kml')" action="{instance('exist-config')/url}xeac/kml/{instance('doc')/eac:control/eac:recordId}.kml" method="put"
				replace="none" xxforms:username="{instance('exist-config')/username}" xxforms:password="{instance('exist-config')/password}">
				<xforms:message ev:event="xforms-submit-error" level="modal">Error Saving KML.</xforms:message>
			</xforms:submission>

			<xforms:submission id="delete-kml" action="{instance('exist-config')/url}xeac/kml/{instance('control-instance')/id}.kml" method="delete" replace="none"
				xxforms:username="{instance('exist-config')/username}" xxforms:password="{instance('exist-config')/password}">
				<xforms:setvalue ev:event="xforms-submit-done" ref="instance('control-instance')/status">Finding aid successfully deleted.</xforms:setvalue>
			</xforms:submission>

			<!-- ************************* Solr ************************** -->
			<!-- access service to read in pre-transformed solr doc -->
			<xforms:submission id="eac-to-solr" method="get" replace="instance" instance="addIndex" serialization="none" resource="/xeac/id/{instance('control-instance')/id}.solr">
				<xforms:message ev:event="xforms-submit-error" level="modal">Error transforming EAC record to Solr document.</xforms:message>
				<xforms:action ev:event="xforms-submit-done">
					<xforms:send submission="post-solr-doc"/>
				</xforms:action>
			</xforms:submission>
			<!-- post instance to Solr -->
			<xforms:submission id="post-solr-doc" action="{instance('control-instance')/solr-core}update" ref="instance('addIndex')" instance="addIndex" replace="instance"
				method="post">
				<xforms:message ev:event="xforms-submit-error" level="modal">Data Failed to POST to Solr. Index may be offline or URL is incorrect.</xforms:message>
			</xforms:submission>
			<!-- delete from Solr -->
			<xforms:submission id="delete-solr-doc" action="{instance('control-instance')/solr-core}update" ref="instance('deleteId')" instance="deleteId" replace="none"
				method="post">
				<xforms:send ev:event="xforms-submit-done" submission="commit"/>
				<xforms:message ev:event="xforms-submit-error" level="modal">Data Failed to POST to Solr.</xforms:message>
			</xforms:submission>
			<xforms:submission id="delete-all" action="{instance('control-instance')/solr-core}update" ref="instance('deleteAll')" instance="deleteAll" replace="none" method="post">
				<xforms:send ev:event="xforms-submit-done" submission="commit"/>
				<xforms:setvalue ev:event="xforms-submit-done" ref="instance('control-instance')/status">EAC records removed from search index.</xforms:setvalue>
			</xforms:submission>

			<!-- send commit -->
			<xforms:submission id="commit" action="{instance('control-instance')/solr-core}update" ref="instance('sendCommit')" instance="sendCommit" replace="none" method="post">
				<xforms:message ev:event="xforms-submit-error" level="modal">Solr commit failed.</xforms:message>
			</xforms:submission>

			<!-- send optimize -->
			<xforms:submission id="optimize" action="{instance('control-instance')/solr-core}update" ref="instance('optimizeIndex')" instance="optimizeIndex" replace="none"
				method="post">
				<xforms:setvalue ev:event="xforms-submit-done" ref="instance('control-instance')/status">Index optimized.</xforms:setvalue>
				<xforms:message ev:event="xforms-submit-error" level="modal">Solr optimize failed.</xforms:message>
			</xforms:submission>

			<!-- *********** ADD/DELETE TRIPLES FROM ENDPOINT ***************** -->
			<xforms:submission id="get-rdf" method="get" replace="instance" instance="rdf" serialization="none" resource="/xeac/id/{instance('control-instance')/id}.rdf">
				<xforms:message ev:event="xforms-submit-error" level="modal">Unable to get RDF/XML serialization.</xforms:message>
				<xforms:action ev:event="xforms-submit-done">
					<!-- first remove existing graphs -->
					<xforms:action xxforms:iterate="instance('rdf')//@rdf:about">
						<xforms:var name="uri" select="."/>
						<xforms:setvalue ref="instance('sparqlUpdate')" value="replace(instance('sparqlUpdate-template'), 'URI', $uri)"/>
						<xforms:send submission="delete-graph"/>
					</xforms:action>
				</xforms:action>
			</xforms:submission>

			<xforms:submission id="post-rdf" action="{instance('config')/sparql/store}?default" ref="instance('rdf')" replace="none" method="post" mediatype="application/rdf+xml">
				<xforms:action ev:event="xforms-submit-error">
					<xforms:message level="modal">Post to endpoint failed.</xforms:message>
				</xforms:action>
			</xforms:submission>

			<xforms:submission id="delete-graph" action="{instance('config')/sparql/update}" ref="instance('sparqlUpdate')" serialization="text/plain" replace="none" method="post"
				mediatype="application/sparql-update">
				<xforms:action ev:event="xforms-submit-error">
					<xforms:message level="modal">SPARQL update failed.</xforms:message>
				</xforms:action>
			</xforms:submission>
			<!-- load xeac config file on xforms construction -->
			<xforms:action ev:event="xforms-model-construct-done">
				<xforms:send submission="load-config"/>
			</xforms:action>
		</xforms:model>
	</head>

	<body>
		<xforms:var name="display_path">../</xforms:var>
		<div class="yui3-g">
			<div class="yui3-u-1">
				<div class="content">
					<div id="form">
						<xforms:group ref="instance('status')/text()">
							<div class="success">
								<xforms:output ref="instance('status')"/>
							</div>
						</xforms:group>
						<h1>xEAC Administration</h1>
						<a href="{instance('config')/url}" style="float:right" target="_blank">View Pubic Interface</a>
						<div class="subsection">
							<h2>Object Management</h2>
							<ul>
								<li>
									<a href="edit/">Create New EAC-CPF Record</a>
								</li>
								<li>
									<a href="settings/">xEAC Settings</a>
								</li>
							</ul>
						</div>
						<div class="subsection">
							<h2>Publication</h2>
							<ul>
								<li>
									<xforms:trigger appearance="minimal">
										<xforms:label>Publish All Records</xforms:label>
										<xforms:dispatch target="publish-all" name="fr-show" ev:event="DOMActivate"/>
									</xforms:trigger>
								</li>
								<!--<li>
									<xforms:trigger appearance="minimal">
									<xforms:label>Reindex Published Records</xforms:label>
									<xforms:dispatch target="republish-dialog" name="fr-show" ev:event="DOMActivate"/>
									</xforms:trigger>
									</li>-->
								<li>
									<xforms:trigger appearance="minimal">
										<xforms:label>Unpublish All Records</xforms:label>
										<xforms:dispatch target="unpublish-all" name="fr-show" ev:event="DOMActivate"/>
									</xforms:trigger>
								</li>
								<li>
									<xforms:trigger appearance="minimal">
										<xforms:label>Generate KML for All Records</xforms:label>
										<xforms:dispatch target="generate-kml" name="fr-show" ev:event="DOMActivate"/>
									</xforms:trigger>
								</li>
							</ul>
						</div>
						<xforms:group ref="instance('control-instance')[number(numFound) &gt; 0]">
							<div>
								<h3>Search</h3>
								<p>Query recordId or nameEntry/part containing the following string (case insensitive):</p>
								<div>
									<xforms:input ref="query_input"/>
									<xforms:trigger>
										<xforms:label>Search</xforms:label>
										<xforms:action ev:event="DOMActivate">
											<xforms:setvalue ref="instance('control-instance')/query_sent" value="instance('control-instance')/query_input"/>
											<xforms:setvalue ref="instance('eXist-xquery')/exist:text"
												value="replace(instance('xqueries')/query[@id='query-objects'], 'QUERY', instance('control-instance')/query_sent)"/>
											<xforms:send submission="xquery-pagination"/>
										</xforms:action>
									</xforms:trigger>
									<xforms:group ref=".[string(query_sent)]">
										<xforms:trigger>
											<xforms:label>Clear</xforms:label>
											<xforms:action ev:event="DOMActivate">
												<!-- clear queries-->
												<xforms:setvalue ref="instance('control-instance')/query_input"/>
												<xforms:setvalue ref="instance('control-instance')/query_sent"/>
												<!-- re-establish pagination query on page 1 -->
												<xforms:setvalue ref="instance('control-instance')/page" value="1"/>
												<xforms:setvalue ref="instance('eXist-xquery')/exist:text"
													value="replace(instance('xqueries')/query[@id='get-objects'], 'START', '1')"/>
												<xforms:send submission="xquery-pagination"/>
											</xforms:action>
										</xforms:trigger>
									</xforms:group>
								</div>
							</div>
						</xforms:group>
						<xforms:group ref="instance('pagination-result')">
							<xforms:group ref=".[count(//record) &gt; 0]">
								<h3>List of Records</h3>
								<!-- pagination variables -->
								<xforms:var name="numFound" select="number(instance('control-instance')/numFound)"/>
								<xforms:var name="page" select="number(instance('control-instance')/page)"/>
								<xforms:var name="start" select="(($page - 1) * 20) + 1"/>
								<xforms:var name="end" select="if ($numFound &lt; $page * 20) then $numFound else $page * 20"/>
								<xforms:var name="next" select="($page * 20) + 1"/>
								<xforms:var name="total" select="ceiling($numFound div 20)"/>
								<!-- pagination -->
								<xforms:group ref=".[string-length(instance('control-instance')/query_sent) = 0]">
									<div class="paging_div">
										<div style="float:left;"> Displaying records <b><xforms:output value="$start"/></b> to <b><xforms:output value="$end"/></b> of
													<b><xforms:output value="$numFound"/>
											</b> total results.</div>
										<div style="float:right;">
											<xforms:group ref=".[$page &gt; 1]">
												<xforms:trigger appearance="minimal">
													<xforms:label>Â«Previous</xforms:label>
													<xforms:action ev:event="DOMActivate">
														<xforms:setvalue ref="instance('control-instance')/page" value="$page - 1"/>
														<xforms:setvalue ref="instance('eXist-xquery')/exist:text"
															value="replace(instance('xqueries')/query[@id='get-objects'], 'START', string($start - 20))"/>
														<xforms:send submission="xquery-pagination"/>
													</xforms:action>
												</xforms:trigger>
											</xforms:group>
											<xforms:group ref=".[$page = 1]">
												<span class="pagingSep">Â«Previous</span>
											</xforms:group>
											<!-- always display links to the first two pages -->
											<xforms:group ref=".[$page &gt; 3]">
												<xforms:trigger appearance="minimal">
													<xforms:label>1</xforms:label>
													<xforms:action ev:event="DOMActivate">
														<xforms:setvalue ref="instance('control-instance')/page" value="1"/>
														<xforms:setvalue ref="instance('eXist-xquery')/exist:text"
															value="replace(instance('xqueries')/query[@id='get-objects'], 'START', '1')"/>
														<xforms:send submission="xquery-pagination"/>
													</xforms:action>
												</xforms:trigger>
											</xforms:group>
											<xforms:group ref=".[$page &gt; 4]">
												<xforms:trigger appearance="minimal">
													<xforms:label>2</xforms:label>
													<xforms:action ev:event="DOMActivate">
														<xforms:setvalue ref="instance('control-instance')/page" value="2"/>
														<xforms:setvalue ref="instance('eXist-xquery')/exist:text"
															value="replace(instance('xqueries')/query[@id='get-objects'], 'START', '21')"/>
														<xforms:send submission="xquery-pagination"/>
													</xforms:action>
												</xforms:trigger>
											</xforms:group>
											<!-- display only if you are on page 6 or greater -->
											<xforms:group ref=".[$page &gt; 5]">
												<span class="pagingSep">...</span>
											</xforms:group>
											<!-- always display links to the previous two pages -->
											<xforms:group ref=".[$page &gt; 2]">
												<xforms:trigger appearance="minimal">
													<xforms:label>
														<xforms:output value="$page - 2"/>
													</xforms:label>
													<xforms:action ev:event="DOMActivate">
														<xforms:setvalue ref="instance('control-instance')/page" value="$page - 2"/>
														<xforms:setvalue ref="instance('eXist-xquery')/exist:text"
															value="replace(instance('xqueries')/query[@id='get-objects'], 'START', string((($page - 3) * 20) + 1))"/>
														<xforms:send submission="xquery-pagination"/>
													</xforms:action>
												</xforms:trigger>
											</xforms:group>
											<xforms:group ref=".[$page &gt; 1]">
												<xforms:trigger appearance="minimal">
													<xforms:label>
														<xforms:output value="$page - 1"/>
													</xforms:label>
													<xforms:action ev:event="DOMActivate">
														<xforms:setvalue ref="instance('control-instance')/page" value="$page - 1"/>
														<xforms:setvalue ref="instance('eXist-xquery')/exist:text"
															value="replace(instance('xqueries')/query[@id='get-objects'], 'START', string((($page - 2) * 20) + 1))"/>
														<xforms:send submission="xquery-pagination"/>
													</xforms:action>
												</xforms:trigger>
											</xforms:group>
											<!-- current page -->
											<span class="pagingBtn">
												<xforms:output value="$page"/>
											</span>
											<!-- next two pages -->
											<xforms:group ref=".[$page + 1 &lt;= $total]">
												<xforms:trigger appearance="minimal">
													<xforms:label>
														<xforms:output value="$page + 1"/>
													</xforms:label>
													<xforms:action ev:event="DOMActivate">
														<xforms:setvalue ref="instance('control-instance')/page" value="$page + 1"/>
														<xforms:setvalue ref="instance('eXist-xquery')/exist:text"
															value="replace(instance('xqueries')/query[@id='get-objects'], 'START', string(($page * 20) + 1))"/>
														<xforms:send submission="xquery-pagination"/>
													</xforms:action>
												</xforms:trigger>
											</xforms:group>
											<xforms:group ref=".[$page + 2 &lt;= $total]">
												<xforms:trigger appearance="minimal">
													<xforms:label>
														<xforms:output value="$page + 2"/>
													</xforms:label>
													<xforms:action ev:event="DOMActivate">
														<xforms:setvalue ref="instance('control-instance')/page" value="$page + 2"/>
														<xforms:setvalue ref="instance('eXist-xquery')/exist:text"
															value="replace(instance('xqueries')/query[@id='get-objects'], 'START', string((($page +1) * 20) + 1))"/>
														<xforms:send submission="xquery-pagination"/>
													</xforms:action>
												</xforms:trigger>
											</xforms:group>
											<!-- separator -->
											<xforms:group ref=".[$page &lt;= $total - 4]">
												<span class="pagingSep">...</span>
											</xforms:group>
											<!-- last two pages -->
											<xforms:group ref=".[$page &lt;= $total - 4]">
												<xforms:trigger appearance="minimal">
													<xforms:label>
														<xforms:output value="$total - 1"/>
													</xforms:label>
													<xforms:action ev:event="DOMActivate">
														<xforms:setvalue ref="instance('control-instance')/page" value="$total - 1"/>
														<xforms:setvalue ref="instance('eXist-xquery')/exist:text"
															value="replace(instance('xqueries')/query[@id='get-objects'], 'START', string((($total - 2) * 20) + 1))"/>
														<xforms:send submission="xquery-pagination"/>
													</xforms:action>
												</xforms:trigger>
											</xforms:group>
											<xforms:group ref=".[$page &lt;= $total - 3]">
												<xforms:trigger appearance="minimal">
													<xforms:label>
														<xforms:output value="$total"/>
													</xforms:label>
													<xforms:action ev:event="DOMActivate">
														<xforms:setvalue ref="instance('control-instance')/page" value="$total"/>
														<xforms:setvalue ref="instance('eXist-xquery')/exist:text"
															value="replace(instance('xqueries')/query[@id='get-objects'], 'START', string((($total - 1) * 20) + 1))"/>
														<xforms:send submission="xquery-pagination"/>
													</xforms:action>
												</xforms:trigger>
											</xforms:group>
											<!-- next page -->
											<xforms:group ref=".[$total &gt; $page]">
												<xforms:trigger appearance="minimal">
													<xforms:label>NextÂ»</xforms:label>
													<xforms:action ev:event="DOMActivate">
														<xforms:setvalue ref="instance('control-instance')/page" value="$page + 1"/>
														<xforms:setvalue ref="instance('eXist-xquery')/exist:text"
															value="replace(instance('xqueries')/query[@id='get-objects'], 'START', string($next))"/>
														<xforms:send submission="xquery-pagination"/>
													</xforms:action>
												</xforms:trigger>
											</xforms:group>
											<xforms:group ref=".[not($total &gt; $page)]">
												<span class="pagingSep">NextÂ»</span>
											</xforms:group>
										</div>
									</div>
								</xforms:group>
								<br/>
								<table style="width:100%">
									<thead>
										<tr>
											<th>Title</th>
											<th style="width:10%">View</th>
											<th style="width:5%">Publish</th>
											<th style="width:5%">Delete</th>
										</tr>
									</thead>
									<tbody>
										<xforms:repeat nodeset="instance('pagination-result')//record">
											<xforms:var name="id" select="id"/>
											<xforms:var name="class" select="if (position() mod 2 = 0) then 'even-row' else 'odd-row'"/>
											<tr>
												<td class="{$class}">
													<h4>
														<a href="edit/?recordId={$id}">
															<xforms:output ref="title"/>
															<xforms:output ref="concat('(', $id, ')')"/>
														</a>
													</h4>
													<div>
														<xforms:output ref="maintenanceStatus">
															<xforms:label>Status</xforms:label>
														</xforms:output>
													</div>
												</td>
												<td class="{$class} center">
													<a href="{instance('config')/url}id/{$id}.xml" target="_blank">xml</a> | <a href="{instance('config')/url}id/{$id}"
														target="_blank">html</a>
												</td>
												<td class="{$class} center">
													<!-- only enable publication if the maintenanceStatus allows it -->
													<xforms:group ref=".[maintenanceStatus='new' or maintenanceStatus='revised' or maintenanceStatus='derived']">
														<xforms:group ref=".[published = 'true']">
															<xforms:trigger appearance="minimal">
																<xforms:label>unpublish</xforms:label>
																<xforms:action ev:event="DOMActivate">
																	<xforms:setvalue ref="instance('control-instance')/id" value="$id"/>
																	<xforms:dispatch target="unpublish" name="fr-show"/>
																</xforms:action>
															</xforms:trigger>
														</xforms:group>
														<xforms:group ref=".[published != 'true']">
															<xforms:trigger appearance="minimal">
																<xforms:label>publish</xforms:label>
																<xforms:action ev:event="DOMActivate">
																	<xforms:setvalue ref="instance('control-instance')/id" value="$id"/>
																	<xforms:dispatch target="publish" name="fr-show"/>
																</xforms:action>
															</xforms:trigger>
														</xforms:group>
													</xforms:group>
												</td>
												<td class="{$class} center">
													<xforms:trigger appearance="minimal">
														<xforms:label>
															<img src="/xeac/xforms/images/remove.gif"/>
														</xforms:label>
														<xforms:action ev:event="DOMActivate">
															<xforms:setvalue ref="instance('control-instance')/id" value="$id"/>
															<xforms:dispatch target="delete" name="fr-show"/>
														</xforms:action>
													</xforms:trigger>
												</td>
											</tr>
										</xforms:repeat>
									</tbody>
								</table>
							</xforms:group>
							<xforms:group ref=".[count(//record)=0]">
								<h1>No records in collection.</h1>
							</xforms:group>
						</xforms:group>
					</div>
					<!-- dialogs -->
					<fr:alert-dialog id="publish">
						<fr:label>Publish</fr:label>
						<fr:message>Do you want to publish this object to the search index?</fr:message>
						<fr:negative-choice/>
						<fr:positive-choice>
							<xforms:action ev:event="DOMActivate">
								<!-- update publicationStatus -->
								<xforms:setvalue ref="instance('control-instance')/publicationStatus">approved</xforms:setvalue>
								<xforms:send submission="load-doc"/>
								<!-- create kml -->
								<xforms:insert nodeset="instance('kml')" origin="xxforms:call-xpl('oxf:/apps/xeac/xpl/serializations/eac/kml.xpl', 'data', instance('doc'), 'data')"/>
								<xforms:send submission="save-kml"/>
								<!-- publish to solr -->
								<xforms:setvalue ref="instance('control-instance')/solr-core" value="instance('config')/solr_published"/>
								<xforms:send submission="eac-to-solr"/>
								<xforms:send submission="commit" ev:event="xforms-submit-done"/>
								<!-- post to SPARQL endpoint, if it exists -->
								<xforms:send submission="get-rdf" if="string(instance('config')/sparql/update)"/>
								<xforms:send submission="post-rdf" if="string(instance('config')/sparql/store)" ev:event="xforms-submit-done"/>
								
								<!-- reload table -->
								<xforms:var name="page" select="number(instance('control-instance')/page)"/>
								<xforms:var name="start" select="(($page - 1) * 20) + 1"/>
								<xforms:setvalue ref="instance('eXist-xquery')/exist:text" value="replace(instance('xqueries')/query[@id='get-objects'], 'START', string($start))"/>
								<xforms:send submission="xquery-pagination"/>
							</xforms:action>
						</fr:positive-choice>
					</fr:alert-dialog>
					<fr:alert-dialog id="unpublish">
						<fr:label>Unpublish</fr:label>
						<fr:message>Do you want to remove this object from the search index?</fr:message>
						<fr:negative-choice/>
						<fr:positive-choice>
							<xforms:action ev:event="DOMActivate">
								<!-- update publicationStatus -->
								<xforms:setvalue ref="instance('control-instance')/publicationStatus">inProcess</xforms:setvalue>
								<xforms:send submission="load-doc"/>
								<!-- delete from Solr -->
								<xforms:setvalue ref="instance('deleteId')/query" value="concat('recordId:&#x022;', instance('control-instance')/id, '&#x022;')"/>
								<xforms:setvalue ref="instance('control-instance')/solr-core" value="instance('config')/solr_published"/>
								<xforms:send submission="delete-solr-doc"/>
								
								<!-- delete from triplestore -->
								<xforms:send submission="get-rdf" if="string(instance('config')/sparql/update)"/>
								
								<!-- reload table -->
								<xforms:var name="page" select="number(instance('control-instance')/page)"/>
								<xforms:var name="start" select="(($page - 1) * 20) + 1"/>
								<xforms:setvalue ref="instance('eXist-xquery')/exist:text" value="replace(instance('xqueries')/query[@id='get-objects'], 'START', string($start))"/>
								<xforms:send submission="xquery-pagination"/>
							</xforms:action>
						</fr:positive-choice>
					</fr:alert-dialog>
					<fr:alert-dialog id="delete">
						<fr:label>Delete</fr:label>
						<fr:message>Are you sure you want to delete this object?</fr:message>
						<fr:negative-choice/>
						<fr:positive-choice>
							<xforms:action ev:event="DOMActivate">
								<xforms:send submission="delete-doc"/>
								<xforms:send submission="delete-kml"/>
								<xforms:setvalue ref="instance('deleteId')/query" value="concat('recordId:&#x022;', instance('control-instance')/id, '&#x022;')"/>
								<xforms:setvalue ref="instance('control-instance')/solr-core" value="instance('config')/solr_published"/>
								<xforms:send submission="delete-solr-doc"/>
								
								<!-- delete from triplestore -->
								<xforms:send submission="get-rdf" if="string(instance('config')/sparql/update)"/>
								
								<!-- get new numCount -->
								<xforms:setvalue ref="instance('eXist-xquery')/exist:text" value="instance('xqueries')/query[@id='collection-count']"/>
								<xforms:send submission="xquery-collection"/>
								<!-- reload table -->
								<xforms:var name="page" select="number(instance('control-instance')/page)"/>
								<xforms:var name="start" select="(($page - 1) * 20) + 1"/>
								<xforms:var name="end" select="$page * 20"/>
								<xforms:setvalue ref="instance('eXist-xquery')/exist:text" value="replace(instance('xqueries')/query[@id='get-objects'], 'START', string($start))"/>
								<xforms:send submission="xquery-pagination"/>
							</xforms:action>
						</fr:positive-choice>
					</fr:alert-dialog>
					<!-- mass publication dialogs -->
					<fr:alert-dialog id="publish-all">
						<fr:label>Publish All</fr:label>
						<fr:message>Do you want to publish all records? This may take several minutes.</fr:message>
						<fr:negative-choice/>
						<fr:positive-choice>
							<xforms:action ev:event="DOMActivate">
								<xforms:setvalue ref="instance('eXist-xquery')/exist:text" value="instance('xqueries')/query[@id='publish-all']"/>
								<xforms:send submission="xquery-collection"/>
								<xforms:setvalue ref="instance('control-instance')/solr-core" value="instance('config')/solr_published"/>
								<xforms:action xxforms:iterate="instance('xquery-result')/report/id">
									<!-- publish to solr -->
									<xforms:var name="id" select="context()"/>
									<xforms:setvalue ref="instance('control-instance')/id" value="$id"/>
									<xforms:send submission="eac-to-solr"/>
								</xforms:action>
								<!-- commit index -->
								<xforms:send submission="commit"/>
								<!-- reload table -->
								<xforms:setvalue ref="instance('eXist-xquery')/exist:text" value="replace(instance('xqueries')/query[@id='get-objects'], 'START', '1')"/>
								<xforms:send submission="xquery-pagination"/>
							</xforms:action>
						</fr:positive-choice>
					</fr:alert-dialog>
					<fr:alert-dialog id="generate-kml">
						<fr:label>Generate KML</fr:label>
						<fr:message>This will generate KML documents for all records. It may take several minutes. Proceed?</fr:message>
						<fr:negative-choice>
							<fr:label>No</fr:label>
						</fr:negative-choice>
						<fr:positive-choice>
							<fr:label>Yes</fr:label>
							<xforms:action ev:event="DOMActivate">
								<xforms:setvalue ref="instance('eXist-xquery')/exist:text" value="instance('xqueries')/query[@id='publish-all']"/>
								<xforms:send submission="xquery-collection"/>
								<xforms:action xxforms:iterate="instance('xquery-result')/report/id">
									<xforms:var name="id" select="context()"/>
									<xforms:setvalue ref="instance('control-instance')/id" value="$id"/>
									<xforms:send submission="load-doc"/>
									<!-- create kml -->
									<xforms:action ev:event="xforms-submit-done">
										<xforms:insert nodeset="instance('kml')" origin="xxforms:call-xpl('oxf:/apps/xeac/xpl/serializations/eac/kml.xpl', 'data', instance('doc'), 'data')"/>
										<xforms:send submission="save-kml"/>
									</xforms:action>
								</xforms:action>
								<xforms:setvalue ref="instance('status')">Process complete: KML files generated.</xforms:setvalue>
							</xforms:action>
						</fr:positive-choice>
					</fr:alert-dialog>
					<fr:alert-dialog id="unpublish-all">
						<fr:label>Unpublish All</fr:label>
						<fr:message>Do you want to unpublish all records?</fr:message>
						<fr:negative-choice/>
						<fr:positive-choice>
							<xforms:action ev:event="DOMActivate">
								<xforms:setvalue ref="instance('control-instance')/solr-core" value="instance('config')/solr_published"/>
								<xforms:setvalue ref="instance('deleteAll')/query">*:*</xforms:setvalue>
								<xforms:send submission="delete-all" ev:event="DOMActivate"/>
								<!-- optimize index -->
								<xforms:send submission="optimize"/>
								<!-- reload table -->
								<xforms:setvalue ref="instance('eXist-xquery')/exist:text" value="replace(instance('xqueries')/query[@id='get-objects'], 'START', '1')"/>
								<xforms:send submission="xquery-pagination"/>
							</xforms:action>
						</fr:positive-choice>
					</fr:alert-dialog>
					<fr:alert-dialog id="republish-dialog">
						<fr:label>Republish</fr:label>
						<fr:message>Do you want to reindex currently published records?</fr:message>
						<fr:negative-choice/>
						<fr:positive-choice>
							<xforms:action ev:event="DOMActivate">
								<xforms:setvalue ref="instance('control-instance')/solr-core" value="instance('config')/solr_published"/>
								<xforms:send submission="republish"/>
								<xforms:send submission="optimize" ev:event="xforms-submit-done"/>
							</xforms:action>
						</fr:positive-choice>
					</fr:alert-dialog>
					<!--<fr:xforms-inspector id="orbeon-xforms-inspector"/>-->
				</div>
			</div>
		</div>

		<!-- *************** FIRST RUN ***************-->
		<!-- handle the creation of new collections when a new role has successfull logged in -->
		<xforms:action ev:event="xforms-enabled" if="instance('control-instance')/firstrun = true()">
			<xxforms:show dialog="firstrun"/>
		</xforms:action>

		<!--<xxforms:dialog id="create-collection" appearance="full" level="modal" close="false" draggable="true" visible="false">
			<xforms:label>Welcome to Numishare</xforms:label>
			<p>Please create a collection for your authenticated group.</p>
			<xforms:group ref="instance('collections-list')">
				<h3>
					<xforms:output ref="instance('control-instance')/request-security/role"/>
				</h3>
				<div>
					<xforms:input ref="collection[@role=instance('control-instance')/request-security/role]/@name">
						<xforms:label>Collection Name</xforms:label>
						<xforms:alert>Required</xforms:alert>
					</xforms:input>
				</div>
			</xforms:group>
			<xforms:trigger>
				<xforms:label>Save</xforms:label>
				<xforms:action ev:event="DOMActivate">
					<xforms:setvalue ref="instance('control-instance')/collection-name" value="instance('collections-list')/collection[@role=instance('control-instance')/request-security/role]/@name"/>
					<!-\- set exist collection value for creating new collection-\->
					<xforms:setvalue ref="instance('xqueries')/query[@id='create-collection']"
						value="concat(&quot;xmldb:create-collection(&#x0027;/db/xeac/&quot;, instance(&quot;control-instance&quot;)/collection-name, &quot;&#x0027;, &#x0027;guides&#x0027;)&quot;)"/>
					<xforms:send submission="save-collections"/>
					<xxforms:hide dialog="create-collection"/>
					<xxforms:show dialog="firstrun"/>
				</xforms:action>
			</xforms:trigger>
		</xxforms:dialog>-->

		<!-- if this is the first time that xEAC has ever been run, show a dialog that enables the user to set the title and URLs -->
		<xxforms:dialog id="firstrun" appearance="full" level="modal" close="false" draggable="true" visible="false">
			<xforms:label>Welcome to xEAC</xforms:label>
			<p>This is the first time you have run xEAC.<br/>Please set the following fields (they can be changed later under "Settings")</p>
			<xforms:group ref="instance('config-template')">
				<div>
					<xforms:input ref="title">
						<xforms:label>Title</xforms:label>
						<xforms:alert>Required</xforms:alert>
					</xforms:input>
				</div>
				<div>
					<xforms:input ref="url">
						<xforms:label>Site URL</xforms:label>
						<xforms:alert>Required, must be a URL</xforms:alert>
					</xforms:input>
				</div>
				<h3>Solr URLs</h3>
				<div>
					<xforms:input ref="solr_published">
						<xforms:label>Published</xforms:label>
						<xforms:alert>Required, must be a URL</xforms:alert>
					</xforms:input>
				</div>
			</xforms:group>
			<xforms:trigger>
				<xforms:label>Save</xforms:label>
				<!-- save collections and XML files to config -->
				<xforms:action ev:event="DOMActivate">
					<xforms:send submission="save-config"/>

					<!-- set value and add collection -->
					<xforms:setvalue ref="instance('eXist-xquery')/exist:text" value="instance('xqueries')/query[@id='create-collection']"/>
					<xforms:send submission="create-records-collection"/>
					<xxforms:hide dialog="firstrun"/>
				</xforms:action>
			</xforms:trigger>
		</xxforms:dialog>
	</body>
</html>
